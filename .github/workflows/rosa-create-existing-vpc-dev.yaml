name: rosa-create-with-vpc-dev
on: workflow_dispatch

env:
  AWS_REGION: "us-east-2"

jobs:
  rosa-create-with-vpc:
    name: init-plan-apply
    runs-on: ubuntu-latest
    permissions: # This and the next two lines are required for accessing AWS as an OIDC provider
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: arn:aws:iam::261642263042:role/GitHubAction-AssumeRoleWithAction
          role-session-name: githubrolesession
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Get AWS Secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        # Documentation: https://docs.aws.amazon.com/secretsmanager/latest/userguide/retrieving-secrets_github.html
        with:
          secret-ids: |
            TF_VAR,arn:aws:secretsmanager:us-east-2:261642263042:secret:rosa_secret_v1-1Xxbef
          parse-json-secrets: true
#            secretId1 # An environment variable will be created with the same name as the secret, but in uppercase
#            ENV_VAR_NAME, secretId2 # In this case, you can specify a different name than the secret (alias)
#             Assuming secret named mysecret has value: {"name":"bolauder"}. # When json is parsed, this will create environment variable: NAME: "bolauder"
#
#            ROSA implications:
#            This syntax: TF_VAR,arn:aws:secretsmanager:us-east-2:261642263042:secret:rosa_secret_v1-1Xxbef
#            Will result in: TF_VAR_ADMIN_PASSWORD and TF_VAR_OCM_TOKEN (assuming your secret contains these values.)
#            Then add an entry to variables.tf with these without TF_VAR_   like:  variable "ADMIN_PASSWORD" and variable "OCM_TOKEN"
#            And reference them in main.tf like so: token = var.OCM_TOKEN  and password = var.ADMIN_PASSWORD
#             
#          name-transformation: (Optional) uppercase|lowercase|none
#          parse-json-secrets: (Optional) true|false

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        id: init
        run: terraform init -backend-config=backend.tfvars  

# NOTE: The backend entries are populated after plan, but removed if there is nothing to do.
      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file=dev.tfvars #-lock=false

      - name: Terraform Apply
        id: apply
        run: terraform apply -var-file=dev.tfvars --auto-approve # -lock=false
      
      # - name: Terraform Destroy
      #   id: destroy
      #   run: terraform destroy -var-file=dev.tfvars --auto-approve # -lock=false        
